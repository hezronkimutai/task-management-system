name: Security and Code Quality

on:
  pull_request:
    branches: [ main, develop ]
  push:
    branches: [ main, develop ]

jobs:
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'
        
    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-results.sarif'

  dependency-check:
    name: Dependency Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
        
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
      
    - name: Audit frontend dependencies
      working-directory: ./frontend
      run: |
        echo "üîç Running comprehensive npm audit..."
        echo "üìä Full audit report:"
        npm audit || echo "‚ùå Vulnerabilities found"
        echo ""
        echo "üìã Detailed vulnerability analysis:"
        npm audit --json > audit-report.json || true
        if [ -f audit-report.json ]; then
          echo "Vulnerability summary:"
          jq -r '.metadata | "Total vulnerabilities: \(.vulnerabilities.total // 0) (Info: \(.vulnerabilities.info // 0), Low: \(.vulnerabilities.low // 0), Moderate: \(.vulnerabilities.moderate // 0), High: \(.vulnerabilities.high // 0), Critical: \(.vulnerabilities.critical // 0))"' audit-report.json || echo "Could not parse audit results"
        fi
        echo ""
        echo "üõ†Ô∏è Recommended actions:"
        echo "1. Review vulnerabilities in the Security tab"
        echo "2. Consider updating to newer package versions"
        echo "3. Evaluate if vulnerabilities affect production code"
        echo "4. For react-scripts vulnerabilities, monitor for updates"
      
    - name: Cache OWASP NVD Database
      uses: actions/cache@v4
      with:
        path: |
          ~/.m2/repository/org/owasp
          backend/target/dependency-check-data
        key: ${{ runner.os }}-owasp-nvd-${{ hashFiles('**/pom.xml') }}-v2
        restore-keys: |
          ${{ runner.os }}-owasp-nvd-${{ hashFiles('**/pom.xml') }}-
          ${{ runner.os }}-owasp-nvd-
          
    - name: Make Maven wrapper executable
      working-directory: ./backend
      run: chmod +x ./mvnw
      
    - name: Check for known vulnerabilities in backend
      working-directory: ./backend
      env:
        # Use NVD API key if available (set as repository secret for better performance)
        NVD_API_KEY: ${{ secrets.NVD_API_KEY }}
      run: |
        echo "üîç Running OWASP Dependency Check..."
        echo "üìä Scanning backend dependencies for known vulnerabilities..."
        
        if [ -n "$NVD_API_KEY" ]; then
          echo "‚úÖ Using NVD API key for faster updates"
        else
          echo "‚ö†Ô∏è  No NVD API key provided - scan may take longer"
          echo "üí° To speed up scans, add NVD_API_KEY as a repository secret"
          echo "   Get a free API key from: https://nvd.nist.gov/developers/request-an-api-key"
        fi
        
        # Run dependency check
        ./mvnw org.owasp:dependency-check-maven:check
        
        echo ""
        echo "üìã Scan completed. Check the reports in target/dependency-check/"
        
    - name: Upload OWASP Dependency Check results
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dependency-check-report
        path: backend/target/dependency-check/
        retention-days: 30
